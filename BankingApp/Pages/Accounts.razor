@page "/accounts"

@inject IDataService dataService
@inject IUserInteraction userService


@if(AccountDTOs != null && AccountDTOs.Count > 0)
{
    

<table class="table table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Customer Id</th>
            <th>Account Type</th>
            <th>Balance</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var account in AccountDTOs)
        {
            <tr>
                <td>@account.Id</td>
                <td>@account.CustomerId</td>
                <td>@account.AccountType</td>
                <td>@account.Balance</td>
            </tr>
        }
    </tbody>
</table>
}


@code {
    public List<AccountDTO> AccountDTOs { get; set; } = new List<AccountDTO>();


    protected override async Task OnInitializedAsync()
    {
        // var userId = userService.UserId;

        // AccountDTOs = await dataService.GetAllAccountsByUserId("hjghfhjfjhgfhjgfg");

        var userId = userService.UserId;

        HttpClient httpClient = new HttpClient();
        httpClient.BaseAddress = new Uri("https://localhost:7176/api/");
        var response = await httpClient.GetAsync($"getallaccountsbyid/{userId}");
        
        
    }



}