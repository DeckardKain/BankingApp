@page "/accounts"
@inject IUIService UIService
@inject IDataService dataService
@inject IUserInteraction userService

<NewAccountForm OnAccountCreated="UpdateAccounts" />

@if(AccountDTOs != null && AccountDTOs.Count > 0)
{
    

<table class="table table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Customer Id</th>
            <th>Account Type</th>
            <th>Balance</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var account in AccountDTOs)
        {
            <tr>
                    <td><a href="/accounts/account">@account.AccountType</a></td>
                <td>@account.Balance</td>
            </tr>
        }
    </tbody>
</table>
}


@code {
    public List<AccountDTO> AccountDTOs { get; set; } = new List<AccountDTO>();

    protected override void OnInitialized()
    {
        UIService.OnUpdateUI += StateHasChanged;
    }

    protected override async Task OnInitializedAsync()
    {
        UIService.OnUpdateUI += StateHasChanged;
        await UpdateAccounts();
    }

    private async Task UpdateAccounts()
    {
        var userId = userService.UserId;
        if (userId != null)
        {
            AccountDTOs = await dataService.GetAllAccountsByUserId(userId);
        }
    }
}