
@inject IUserInteraction userInteraction

<EditForm Model="@newAccount" OnValidSubmit="CreateAccount">
    @if (IsAccountCreated)
    {
        <div class="alert alert-success" role="alert">
            Account created successfully!
        </div>
    }

    <div class="form-group">
        <label for="customerId">Customer ID:</label>
        <InputText class="form-control" id="customerId" @bind-Value="@newAccount.CustomerId"></InputText>
    </div>

    <div class="form-group">
        <label for="accountType">Account Type:</label>
        <select class="form-control" id="accountType" @bind="@newAccount.AccountType">
            <option value="Chequing">Chequing</option>
            <option value="Savings">Savings</option>
            <option value="Retirement">Retirement</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Create Account</button>
</EditForm>

@code {
    private AccountDTO newAccount = new AccountDTO();
    private bool IsAccountCreated = false;

    private async Task CreateAccount()
    {
        await userInteraction.CreateNewAccount(newAccount);
        // Set IsAccountCreated to true to show success message
        IsAccountCreated = true;
    }
}